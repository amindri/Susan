@model FirstInFirstAid.Models.Event

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts {

    @Scripts.Render("~/Scripts/jquery-ui-timepicker-addon.min.js")
    @Scripts.Render("~/Scripts/jquery-combobox.js")

    <script type="text/javascript">

        $(document).ready(function () {

            $("input[type=datetime]").datetimepicker({
                dateFormat: "dd.M.yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-100:+5",
                controlType: "select",
                timeFormat: "hh:mm TT",
                "stepMinute": 15
            });

            var i = $("#segments td").closest("tr").length;
            $("#addSegment").click(function () {
                if ($(this).attr('data-action') == "add") {
                    var segment = {
                        eventSegment: {
                            Name: $.trim($("#Name").val()),
                            StartTime: $.trim($("#StartTime").val()),
                            EndTime: $.trim($('#EndTime').val()),
                            RequiredNumberOfStaff: $.trim($('#RequiredNumberOfStaff').val())
                        },
                        eventId:@Model.Id
                    };

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Create", "EventSegments")',
                        data: JSON.stringify(segment),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (responseSegment) {
                            var url = '@Url.Action("Edit", "EventSegments")' + '/' + responseSegment.Id;
                            $('#segments> tbody:last-child').append(
                                "<tr id=" + i + ">" +
                                "<td> " + responseSegment.Name + "</td > " +
                                "<td> " + responseSegment.StartTime + "</td > " +
                                "<td>" + responseSegment.EndTime + "</td>" +
                                "<td>" + responseSegment.RequiredNumberOfStaff + "</td>" +
                                "<td>" +
                                "<button class='btn btn-danger' type= 'button' value= 'Delete' onclick= 'deleteSegment(" + i + ")'>" +
                                "Delete" +
                                "</button>" +
                                "<button class='btn btn-primary' onclick='window.open(\" " + url + " \")\' type='button' class='btn btn-primary' data-id=" + i + " data-action='Change'>" +
                                "Edit" +
                                "</button>" +
                                "</td>" +
                                "</tr >");
                            i++;
                        },
                        error: function (msg) {
                            alert("error" + msg);
                        }
                    });


                } else {
                    var segmentId = $("#segmentId").val();
                    $("#" + segmentId + " td:nth-child(1)").html($("#Name").val());
                    $("#" + segmentId + " td:nth-child(1)").html($("#StartTime").val());
                    $("#" + segmentId + " td:nth-child(2)").html($("#EndTime").val());
                    $("#" + segmentId + " td:nth-child(4)").html($("#RequiredNumberOfStaff").val());
                }
                $('#modal').modal('hide');
            });

            $("#modal").on('hidden.bs.modal', function () {
                $(".modal-body input").val("");
            });


            $('#modal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget) // Button that triggered the modal
                var buttonName = button.data('action') // Extract info from data-* attributes
                // Update the modal's content.
                var modal = $(this);
                if (buttonName == "Change") {
                    var rowId = button.data('id');
                    modal.find('.modal-footer button span').text(buttonName);
                    modal.find('.modal-footer button').attr("data-action", "change");
                    modal.find('.modal-body input#Name').val($("tr#" + rowId + " td:nth-child(1)").html());
                    modal.find('.modal-body input#StartTime').val($("tr#" + rowId + " td:nth-child(2)").html());
                    modal.find('.modal-body input#EndTime').val($("tr#" + rowId + " td:nth-child(3)").html());
                    modal.find('.modal-body input#RequiredNumberOfStaff').val($("tr#" + rowId + " td:nth-child(5)").html());
                    modal.find('.modal-body input#segmentId').val(button.data('id'));
                } else {
                    modal.find('.modal-footer button span').text("Add");
                    modal.find('.modal-footer button').attr("data-action", "add");
                }
            });

            //initialising the combobox at the very end in document.ready
            $(function () {
                window.setTimeout(function () {
                    $('#Client').combobox();
                }, 0);
            });
        });

        function deleteSegment(id) {
            $("#" + id).remove();
        };

        function addAllSegmentsToForm() {
            $("#form").append("<input type='hidden' name='clientId'" + " value='" + $("#Client").val() + "'/>");
            //$("#form").append("<input type='hidden' name='Client.Name'" + " value='" + $("#Client option:selected").text() + "'/>");

            var count = 0;
            $('#segments > tbody > tr:not(:first)').each(function () {
                var columns = $(this).find('td');
                var start = new Date($(columns[1]).html().trim());
                var end = new Date($(columns[2]).html().trim());
                var timeDiff = Math.abs(end - start) / 36e5;           
                $("#form").append("<input type='hidden' name='EventSegments[" + count + "].Name'" + " value='" + $(columns[0]).html().trim() + "'/>");
                $("#form").append("<input type='hidden' name='EventSegments[" + count + "].StartTime'" + " value='" + $(columns[1]).html().trim() + "'/>");
                $("#form").append("<input type='hidden' name='EventSegments[" + count + "].EndTime'" + " value='" + $(columns[2]).html().trim() + "'/>");
                $("#form").append("<input type='hidden' name='EventSegments[" + count + "].RequiredNumberOfStaff'" + " value='" + $(columns[3]).html().trim() + "'/>");
                $("#form").append("<input type='hidden' name='EventSegments[" + count + "].Hours'" + " value='" + timeDiff + "'/>");
                $("#form").append("<input type='hidden' name='EventSegments[" + count + "].Id'" + " value='" + $(this).attr("data-dbId").trim() + "'/>");
                count++;
            });
        };
    </script>
}

<h3 class="page-header">Edit Event</h3>

<div class="container-fluid">
    <div class="row">

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal" id="form">
    
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        <label class="control-label col-md-2" for="EventName">Event Name:</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="InvoiceNumber">Invoice Number:</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.InvoiceNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.InvoiceNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="BusinessId">Business ID:</label>
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.BusinessId, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BusinessId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="EventState">Event State:</label>
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.EventState, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EventState, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="HourlyRate">Hourly Rate:</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.HourlyRate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HourlyRate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="TotalFee">Total Fee:</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.TotalFee, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TotalFee, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="Client">Client:</label>
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.Client.Id, (SelectList)ViewBag?.Clients, new { id = "Client" })
        </div>
    </div>

   

    <div class="form-group">
        <label class="control-label col-md-2">Add Event Segments:</label>
        <div class="col-md-10">
            <button data-target="#modal" data-toggle="modal" type="button" class="btn btn-success .btn-sm"> Add </button>
        </div>
    </div>

    <h4 class="page-header"> Event Segments</h4>
    <div class="table-responsive">
        <table class="table" id="segments" style="width:100%; padding-top:40px;">
            <tbody>
                <tr>
                    <th>Name</th>
                    <th>Start Date/Time</th>
                    <th>End Date/Time</th>
                    <th>Required Number Of Staff</th>
                    <th>Actions</th>
                </tr>

                @if (Model.EventSegments != null)
                {
                    var count = 0;
                    foreach (var segment in Model.EventSegments)
                    {
                        <tr id=@count data-dbId=@segment.Id>
                            <td>@segment.Name</td>
                            <td>@segment.StartTime</td>
                            <td>@segment.EndTime</td>
                            <td>@segment.RequiredNumberOfStaff</td>
                            <td>
                                <button type="button" class="btn btn-danger" value="Delete" onclick="deleteSegment(@count)">
                                    Delete
                                </button>
                                <button type="button" class="btn btn-primary" onclick="window.open('@Url.Action("Edit", "EventSegments", new { id = segment.Id })')" data-id="@count" data-action="Change">
                                    Edit
                                </button>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>


    <div class="form-group">
        <div class="col-md-2">
            <input onclick="addAllSegmentsToForm();" type="submit" value="Save" class="btn btn-success" />
        </div>
    </div>
</div>
}
        </div>
    </div>
<div id="modal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Create Event Segment</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        <label class="control-label col-md-2">Name:</label>
                        <div class="col-md-10">
                            @Html.Editor("Name", new { htmlAttributes = new { @id = "Name", @class = "form-control"} })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">Start Date/Time:</label>
                        <div class="col-md-10">
                            @Html.Editor("StartTime", new { htmlAttributes = new {@id = "StartTime", @class = "form-control", @type = "datetime", onkeydown = "return false", onpaste = "return false" } })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">End Date/Time:</label>
                        <div class="col-md-10">
                            @Html.Editor("EndTime", new { htmlAttributes = new { @id = "EndTime", @class = "form-control", @type = "datetime", onkeydown = "return false", onpaste = "return false"} })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Required Number Of Staff", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.Editor("RequiredNumberOfStaff", new { htmlAttributes = new {@id = "RequiredNumberOfStaff", @class = "form -control" } })
                        </div>
                    </div>
                </div>
                <input type="hidden" id="segmentId">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="addSegment" data-dismiss="modal">
                    <span class="ui-button-text">Add</span>
                </button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
