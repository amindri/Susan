@model FirstInFirstAid.Models.Event

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts {

    @Scripts.Render("~/Scripts/jquery-ui-timepicker-addon.min.js")
    @Scripts.Render("~/Scripts/jquery-combobox.js")

    <script type="text/javascript">

        $(document).ready(function () {

            $("input[type=datetime]").datetimepicker({
                dateFormat: "dd.M.yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-100:+5",
                controlType: "select",
                timeFormat: "hh:mm TT",
                "stepMinute": 15
            });

       
            $("#addSegment").click(function () {
                
                var segment = {
                    eventSegment: {
                        Name: $.trim($("#Name").val()),
                        StartTime: $.trim($("#StartTime").val()),
                        EndTime: $.trim($('#EndTime').val()),
                        RequiredNumberOfStaff: $.trim($('#RequiredNumberOfStaff').val())
                    },
                    eventId:@Model.Id
                };

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Create", "EventSegments")',
                    data: JSON.stringify(segment),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (responseSegment) {
                        var url = '@Url.Action("Edit", "EventSegments")' + '/' + responseSegment.Id;
                        $('#segments> tbody:last-child').append(
                            "<tr id=" + responseSegment.Id + ">" +
                            "<td> " + responseSegment.Name + "</td > " +
                            "<td> " + responseSegment.StartTime + "</td > " +
                            "<td>" + responseSegment.EndTime + "</td>" +
                            "<td>" + responseSegment.RequiredNumberOfStaff + "</td>" +
                            "<td>" +
                            "<button class='btn btn-primary' onclick='window.open(\" " + url + " \")\' type='button' class='btn btn-primary'>" +
                            "Edit" +
                            "</button>" + "&nbsp;&nbsp;&nbsp;" +
                            "<button class='btn btn-danger' type= 'button' value= 'Delete' onclick= 'deleteSegment(" + responseSegment.Id + ")'>" +
                            "Delete" +
                            "</button>" +
                            "</td>" +
                            "</tr >");
                    },
                    error: function (msg) {
                        alert("error" + msg);
                    }
                });
                                
                $('#modal').modal('hide');
            });

            $("#modal").on('hidden.bs.modal', function () {
                $(".modal-body input").val("");
            });
                       

            //initialising the combobox at the very end in document.ready
            $(function () {
                window.setTimeout(function () {
                    $('#Client').combobox();
                }, 0);
            });
        });

        function deleteSegment(id) {
            $.ajax({
                type: "GET",
                url: "/EventSegments/Delete/" + id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (obj) {
                    if (obj.Type == 'Warn') {
                        $("#warnModalBody").text(obj.Message);
                        $('#warnModal').modal('show');
                    } else {
                        $("#delButton").attr("onclick", "deleteConfirmed(" + obj.Id + ")");
                        $("#confirmModalBody").text(obj.Message);
                        $('#confirmModal').modal('show');
                    }
                },
                error: function (obj) {
                    $("#warnModalBody").text(obj.Message);
                    $('#warnModal').modal('show');
                }
            });            
        };

        function deleteConfirmed(id) {
            $.ajax({
                type: "POST",
                url: "/EventSegments/DeleteConfirmed/" + id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    $("#successModalBody").text(msg);
                    $('#successModal').modal('show');
                    $("#" + id).remove();
                },
                error: function (obj) {
                    $("#warnModalBody").text(obj.Message);
                    $('#warnModal').modal('show');
                }
            });
        };

        function addElementsToForm() {
            $("#form").append("<input type='hidden' name='clientId'" + " value='" + $("#Client").val() + "'/>");
        };

    </script>
}

<h3 class="page-header">Edit Event</h3>

<div class="container-fluid">
    <div class="row">

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal" id="form">
    
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        <label class="control-label col-md-2" for="EventName">Event Name:</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="InvoiceNumber">Invoice Number:</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.InvoiceNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.InvoiceNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="BusinessId">Business ID:</label>
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.BusinessId, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BusinessId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="EventState">Event State:</label>
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.EventState, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EventState, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="HourlyRate">Hourly Rate:</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.HourlyRate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.HourlyRate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="TotalFee">Total Fee:</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.TotalFee, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TotalFee, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="Client">Client:</label>
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.Client.Id, (SelectList)ViewBag?.Clients, new { id = "Client" })
        </div>
    </div>

   

    <div class="form-group">
        <label class="control-label col-md-2">Add Event Segments:</label>
        <div class="col-md-10">
            <button data-target="#modal" data-toggle="modal" type="button" class="btn btn-success .btn-sm"> Add </button>
        </div>
    </div>

    <h4 class="page-header"> Event Segments</h4>
    <div class="table-responsive">
        <table class="table" id="segments" style="width:100%; padding-top:40px;">
            <tbody>
                <tr>
                    <th>Name</th>
                    <th>Start Date/Time</th>
                    <th>End Date/Time</th>
                    <th>Required Number Of Staff</th>
                    <th>Actions</th>
                </tr>

                @if (Model.EventSegments != null)
                {
                    foreach (var segment in Model.EventSegments)
                    {
                        <tr id=@segment.Id>
                            <td>@segment.Name</td>
                            <td>@segment.StartTime</td>
                            <td>@segment.EndTime</td>
                            <td>@segment.RequiredNumberOfStaff</td>
                            <td>
                                <button type="button" class="btn btn-primary" onclick="window.open('@Url.Action("Edit", "EventSegments", new { id = segment.Id })')">
                                    Edit
                                </button> &nbsp;
                                <button type="button" class="btn btn-danger" value="Delete" onclick="deleteSegment(@segment.Id)">
                                    Delete
                                </button>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>


    <div class="form-group">
        <div class="col-md-2">
            <input onclick="addElementsToForm();" type="submit" value="Save Event" class="btn-lg btn-success" />
        </div>
    </div>
</div>
}
 </div>
    </div>
<div id="modal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add Event Segment</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                     <div class="form-group">
                        <label class="control-label col-md-2">Name:</label>
                        <div class="col-md-10">
                            @Html.Editor("Name", new { htmlAttributes = new { @id = "Name", @class = "form-control"} })
                            <p id="segempty" class="c-val" hidden> Name is missing</pid="segempty">
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">Start Date/Time:</label>
                        <div class="col-md-10">
                            @Html.Editor("StartTime", new { htmlAttributes = new { @id = "StartTime", @class = "form-control", @type = "datetime", onkeydown = "return false", onpaste = "return false" } })
                            <p id="stempty" class="c-val" hidden>Start Date/Time is missing</p>
                            <p id="stless" class="c-val" hidden> Start date must be before end date</p>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">End Date/Time:</label>
                        <div class="col-md-10">
                            @Html.Editor("EndTime", new { htmlAttributes = new { @id = "EndTime", @class = "form-control", @type = "datetime", onkeydown = "return false", onpaste = "return false" } })
                            <p id="etempty" class="c-val" hidden> End date/time is missing</p>
                            <p id="etbig" class="c-val" hidden> End date must be after start date</p>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Required Number Of Staff", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.Editor("RequiredNumberOfStaff", new { htmlAttributes = new { @id = "RequiredNumberOfStaff", @class = "form -control" } })
                            <p id="staffempty" class="c-val" hidden> Required number of staff is missing</p>
                        </div>
                    </div>
                </div>
                <input type="hidden" id="segmentId">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="addSegment" data-dismiss="modal">Add</button>      
                
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
