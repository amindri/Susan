@model FirstInFirstAid.Models.Event

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Content/custom-styles.css")

@section Scripts {

    @Scripts.Render("~/Scripts/jquery-ui-timepicker-addon.min.js")
    @Scripts.Render("~/Scripts/jquery-combobox.js")

<script type="text/javascript">

    $(document).ready(function () {
        $("#StartTime").datetimepicker({
            dateFormat: "dd.M.yy",
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+5",
            controlType: "select",
            timeFormat: "hh:mm TT",
            "stepMinute": 15,
            minDate: 0,
        });

        $("#EndTime").datetimepicker({
            dateFormat: "dd.M.yy",
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+5",
            controlType: "select",
            timeFormat: "hh:mm TT",
            "stepMinute": 15,
            minDate: 0,
        });

        $('#Client').append($("<option selected value='Please Select'>Please Select</option>"));
        $("#Client").combobox({ getdata: addClientsToList});

        var i = 0;
        var valid = true;//for client side validation
        $("#addChild").click(function () {
            var segname = $("#Name").val();
            var starttime = $("#StartTime").val();
            var endtime = $("#EndTime").val();
            var staff = $("#RequiredNumberOfStaff").val();
                     
             if (segname == '') {
                valid = false;
                $("#segempty").show();
            } else {
                $("#segempty").hide();
            }

            if (starttime == '') {
                valid = false;
                $("#stempty").show();
            } else {
                $("#stempty").hide();
            }

            if (endtime == '') {
                valid = false;
                $("#etempty").show();

            } else {
                $("#etempty").hide();
            }

            if (endtime < starttime) {
                valid = false;
                
                if (segname != '') {
                    $("#segempty").hide();
                }
                if (starttime != '') {
                    $("#stempty").hide();
                }
                if (staff != '') {
                    $("#staffempty").hide();
                }

                $("#etbig").show();
            } else {
                $("#etempty").hide();
                $("#etbig").hide();
            }

            if (staff == '') {
                valid = false;
                $("#staffempty").show();
            } else {
                $("#staffempty").hide();
            }

            if (segname != '' & starttime != '' & endtime != '' & staff != '' & endtime > starttime) {

                valid = true;
            }

            if (valid == true) {
                $('#segments> tbody:last-child').append(
                    "<tr id=" + i + ">" +
                    "<td> " + $("#Name").val() + "</td>" +
                    "<td> " + $("#StartTime").val() + "</td>" +
                    "<td>" + $("#EndTime").val() + "</td>" +
                    "<td>" + $("#RequiredNumberOfStaff").val() + "</td>" +
                    "<td id='" + $("#Coverage").val() + "'>" + $("#Coverage :selected").text() + "</td>" +
                    "<td><input type='button' class='btn btn-danger' value='Delete' onclick='deleteSegment(" + i + ")'/></td>" +
                    "</tr >");
                i++;
                $('#modal').modal('hide');
                //  $('.modal-body input p').val('');
              
            } else {
                $('#modal').modal('show');
            };

        });
        $("#modal").on('hidden.bs.modal', function () {
            $(".modal-body input p").val("");
        });


        // client-side validation for client name combo box and submit form
        $("#createEvent").click(function () {
            
                var cName = $("#Client").val();
                if ((cName == 'Please Select') || (cName == '')) {
                    $("#cempty").show();
                } else {
                    var count = 0;

                    $("#form").append("<input type='hidden' name='clientId'" + " value='" + $("#Client").val() + "'/>");

                    $('#segments > tbody > tr:not(:first)').each(function () {
                        var columns = $(this).find('td');
                        
                        $("#form").append("<input type='hidden' name='EventSegments[" + count + "].Name'" + " value='" + $(columns[0]).html().trim() + "'/>");
                        $("#form").append("<input type='hidden' name='EventSegments[" + count + "].StartTime'" + " value='" + $(columns[1]).html().trim() + "'/>");
                        $("#form").append("<input type='hidden' name='EventSegments[" + count + "].EndTime'" + " value='" + $(columns[2]).html().trim() + "'/>");
                        $("#form").append("<input type='hidden' name='EventSegments[" + count + "].RequiredNumberOfStaff'" + " value='" + $(columns[3]).html().trim() + "'/>");
                        $("#form").append("<input type='hidden' name='EventSegments[" + count + "].Coverage'" + " value='" + $(columns[4]).html().trim() + "'/>");

                        $("#form").append("<input type='hidden' name='EventSegments[" + count + "].Event.EventName'" + " value='" + $('#EventName').val() + "'/>");
                        $("#form").append("<input type='hidden' name='EventSegments[" + count + "].Event.InvoiceNumber'" + " value='" + $('#InvoiceNumber').val() + "'/>");
                        $("#form").append("<input type='hidden' name='EventSegments[" + count + "].Event.BusinessId'" + " value='" + $('#BusinessId').val() + "'/>");
                        $("#form").append("<input type='hidden' name='EventSegments[" + count + "].Event.EventState'" + " value='" + $('#EventState').val() + "'/>");

                        count++;
                    });
                }       
        });  
    });

    function addClientsToList() {
        $.ajax({
            type: "POST",
            url: "/Events/GetClients",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (clientList) {
                $('#Client option').remove();

                $.each(clientList, function (index, client) {
                    $('#Client').append($("<option></option>").attr("value", client.Id).text(client.Name));
                });
            },
            error: function () {
                alert("Failed to load Clients");
            }
        });
    }

    function deleteSegment(id) {
        $("#" + id).remove();
    };

</script>    
}

<h3 class="page-header">Add New Event</h3>
<div class="container-fluid">

    <div class="row">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal" id="form">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    <label class="control-label col-md-2" for="EventName">Event Name:</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Event Name" } })
                        @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2" for="InvoiceNumber">Invoice Number:</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.InvoiceNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Invoice Number" } })
                        @Html.ValidationMessageFor(model => model.InvoiceNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2" for="BusinessId">Business ID:</label>
                    <div class="col-md-10">

                        @Html.EnumDropDownListFor(model => model.BusinessId, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BusinessId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2" for="EventState">Event State:</label>
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.EventState, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.EventState, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2" for="HourlyRate">Hourly Rate:</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HourlyRate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HourlyRate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2" for="TotalFee">Total Fee:</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TotalFee, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TotalFee, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group ui-widget">
                    <label class="control-label col-md-2" for="Client">Client:</label>
                    <div class="col-md-10">
                        <select class="form-control combobox" id="Client"></select> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  @Html.ActionLink("Create New", "Create", "Clients", null, new {@id = "link", target = "_blank" })
                        <p id="cempty" hidden>Client name is missing</p>
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Add Event Segments:</label>
                    <div class="col-md-10">
                        <button data-target="#modal" data-toggle="modal" type="button" class="btn btn-success" > Add </button>
                    </div>
                </div>


                <h4 class="page-header"> Event Segments</h4>
                <div class="table-responsive">
                    <table class="table" id="segments" style="width:100%; margin-bottom:40px; ">
                        <tbody>
                            <tr>
                                <th>Name</th>
                                <th>Start Date/Time</th>
                                <th>End Date/Time</th>
                                <th>Required Number Of Staff</th>
                                <th>Coverage</th>
                                <th>Actions</th>
                            </tr>
                        </tbody>
                    </table>
                </div>



                <div class="form-group">
                    <div class=" col-md-2">
                        <input type="submit" value="Add Event" class="btn-lg btn-success" id="createEvent" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div id="modal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add Event Segment</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal" id="modalform">
                   <div class="form-group">
                        <label class="control-label col-md-4">Name</label>
                        <input type="text" class="form-control col-md-9" id="Name" placeholder="Event Segment Name" />
                        <p id="segempty" class="c-val" hidden> Event segment name is missing</p>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-4">Start Date/Time</label>
                        <input type="datetime" onkeydown="return false" onpaste="return false" class="form-control col-md-9" id="StartTime" placeholder="Start Date/Time" />
                        <p id="stempty" class="c-val" hidden> Start date/time is missing</p>
                        </div>

                    <div class="form-group">
                        <label class="control-label col-md-4">End Date/Time</label>
                        <input type="datetime" onkeydown="return false" onpaste="return false" class="form-control col-md-9" id="EndTime" placeholder="End Date/Time" />
                        <p id="etempty" class="c-val" hidden> End date/time is missing</p>
                        <p id="etbig" class="c-val" hidden> End time must be after start time</p>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-4">Required Number Of Staff</label>
                        <input type="text" class="form-control col-md-9" id="RequiredNumberOfStaff" placeholder="Required number of staff"/>
                        <p id="staffempty" class="c-val" hidden> Required number of staff is missing</p>                      
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-4">Coverage</label>                        
                        @Html.DropDownList("Coverage", new SelectList(ViewBag.CoverageSelectList, "ID", "Name"), new { id = "Coverage", @class = "form-control col-md-9" })                        
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="addChild">Add</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
