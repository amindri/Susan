@model FirstInFirstAid.Models.Event

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Scripts {

    <!-- New script to add jQuery datetimepicker by Anu-->
    <script src="~/Scripts/jquery-ui-timepicker-addon.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $("input[type=datetime]").datetimepicker({
                dateFormat: "dd.M.yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-100:+5",
                controlType: "select",
                timeFormat:"hh:mm TT"
            });


        });

        /* Code to fix issue with Crome
        jQuery.validator.methods.date = function (value, element) {
            var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
            if (isChrome) {
                var d = new Date();
                return this.optional(element) || !/Invalid|NaN/.test(new Date(d.toLocaleDateString(value)));
            } else {
                return this.optional(element) || !/Invalid|NaN/.test(new Date(value));
            }
        };

        });*/
    </script>


    <script type="text/javascript">
        $(document).ready(function () {

            var i = 0;
            $("#addChild").click(function () {
                $('#segments> tbody:last-child').append(
                    "<tr id=" + i + ">" +
                    "<td> " + $("#StartTime").val() + "</td>" +
                    "<td>" + $("#EndTime").val() + "</td>" +
                    "<td>" + $("#RequiredNumberOfStaff").val() + "</td>" +
                    "<td>" + $("#Hours").val() + "</td>" +
                    "<td><input type='button' value='Delete' onclick='deleteSegment(" + i + ")'/></td>" +
                    "</tr >");
                i++;
                $('#modal').modal('hide');
            });
        });

        function deleteSegment(id) {
            $("#" + id).remove();
        };

        function addASegmentsToForm() {
            var count = 0;

            $('#segments > tbody > tr:not(:first)').each(function () {
                var columns = $(this).find('td');

                $("#form").append("<input type='hidden' name='EventSegments[" + count + "].StartTime'" + " value='" + $(columns[0]).html().trim() + "'/>");
                $("#form").append("<input type='hidden' name='EventSegments[" + count + "].EndTime'" + " value='" + $(columns[1]).html().trim() + "'/>");
                $("#form").append("<input type='hidden' name='EventSegments[" + count + "].RequiredNumberOfStaff'" + " value='" + $(columns[2]).html().trim() + "'/>");
                $("#form").append("<input type='hidden' name='EventSegments[" + count + "].Hours'" + " value='" + $(columns[3]).html().trim() + "'/>");
                count++;
            });
        }
    </script>



}
<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" id="form">
        <h4>Event</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class="control-label col-md-2" for="EventName">Event Name:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Event Name" } })
                @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="InvoiceNumber">Invoice Number:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.InvoiceNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Invoice Number" } })
                @Html.ValidationMessageFor(model => model.InvoiceNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="BusinessId">Business ID:</label>
            <div class="col-md-10">

                @Html.EnumDropDownListFor(model => model.BusinessId, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BusinessId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="EventState">Event State:</label>
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.EventState, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EventState, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="HourlyRate">Hourly Rate:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.HourlyRate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HourlyRate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="TotalFee">Total Fee:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalFee, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalFee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Add Event Segments:</label>
            <div class="col-md-10">
                <button data-target="#modal" data-toggle="modal" type="button" class="btn btn-success .btn-sm"> Add </button>
            </div>
        </div>


        <h4 style="padding-top:30px;"> Event Segments</h4>
        <div class="table-responsive">
            <table class="table" id="segments" style="width:100%; padding-top:40px; ">
                <tbody>
                    <tr>
                        <th>Start Date/Time</th>
                        <th>End Date/Time</th>
                        <th>Hours</th>
                        <th>Required Number Of Staff</th>
                        <th>Actions</th>
                    </tr>
                </tbody>
            </table>
        </div>



        <div class="form-group">
            <div class=" col-md-2">
                <input onclick="addASegmentsToForm();" type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div id="modal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Create Event Segment</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        <label class="control-label col-md-2">Start Date/Time:</label>
                        <div class="col-md-10">
                            <!-- Anu edits-->
                            @Html.Editor("StartTime", new { htmlAttributes = new { @class = "form-control", @type = "datetime", onkeydown = "return false", onpaste = "return false" } })

                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">End Date/Time:</label>
                        <div class="col-md-10">
                            @Html.Editor("EndTime", new { htmlAttributes = new { @class = "form-control", @type = "datetime", onkeydown = "return false", onpaste = "return false" } })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-2">Hours:</label>
                        <div class="col-md-10">
                            @Html.Editor("Hours", new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="form-group">
                         <label class="control-label col-md-2">Required Number Of Staff: </label>
                        <div class="col-md-10">
                            @Html.Editor("RequiredNumberOfStaff", new { htmlAttributes = new { @class = "form -control" } })
                        </div>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="addChild" data-dismiss="modal">Add</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
