@model FirstInFirstAid.Models.Event

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/Content/custom-styles.css")

@section Scripts {

    @Scripts.Render("~/Scripts/jquery-ui-timepicker-addon.min.js")
    @Scripts.Render("~/Scripts/jquery-combobox.js")

<script type="text/javascript">

    $(document).ready(function () {
        $("#StartTime").datetimepicker({
            dateFormat: "dd.M.yy",
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+5",
            controlType: "select",
            timeFormat: "hh:mm TT",
            "stepMinute": 15,
            minDate: 0,
        });

        $("#EndTime").datetimepicker({
            dateFormat: "dd.M.yy",
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+5",
            controlType: "select",
            timeFormat: "hh:mm TT",
            "stepMinute": 15,
            minDate: 0,
        });      

        $('#Client').append($("<option selected value='Please Select'>Please Select</option>"));
        $("#Client").combobox({ getdata: addClientsToList});       

        $("#modal").on('hidden.bs.modal', function () {
            $(".modal-body input p").val("");
        });                
    });

    // client-side validation for client name combo box and submit form
    function sendform() {

        var cName = $("#Client").val();
        if ((cName == 'Please Select') || (cName == '')) {
            $("#cempty").show();
            return false;
        } else {
            $("#form").append("<input type='hidden' name='clientId'" + " value='" + $("#Client").val() + "'/>");                    
            return true;
        }       
    }

    function addClientsToList() {
        $.ajax({
            type: "POST",
            url: "/Events/GetClients",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (clientList) {
                $('#Client option').remove();

                $.each(clientList, function (index, client) {
                    $('#Client').append($("<option></option>").attr("value", client.Id).text(client.Name));
                });
            },
            error: function () {
                alert("Failed to load Clients");
            }
        });
    }
</script>    
}

<h3 class="page-header">Add New Event</h3>
<div class="container-fluid">

    <div class="row">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal" id="form">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    <label class="control-label col-md-2" for="EventName">Event Name:</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Event Name" } })
                        @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2" for="InvoiceNumber">Invoice Number:</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.InvoiceNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Invoice Number" } })
                        @Html.ValidationMessageFor(model => model.InvoiceNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2" for="BusinessId">Business ID:</label>
                    <div class="col-md-10">

                        @Html.EnumDropDownListFor(model => model.BusinessId, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BusinessId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2" for="EventState">Event State:</label>
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.EventState, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.EventState, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2" for="HourlyRate">Hourly Rate:</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HourlyRate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HourlyRate, "", new { @class = "text-danger" })
                    </div>
                </div>                

                <div class="form-group ui-widget">
                    <label class="control-label col-md-2" for="Client">Client:</label>
                    <div class="col-md-10">
                        <select class="form-control combobox" id="Client"></select> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  @Html.ActionLink("Create New", "Create", "Clients", null, new {@id = "link", target = "_blank" })
                        <p id="cempty" class="text-danger" hidden>Client name is missing</p>
                    </div>
                </div>

                <div class="form-group">
                    <div class=" col-md-2">
                        <input type="submit" value="Add Event" class="btn-lg btn-success" id="createEvent"  onClick="return sendform()" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
