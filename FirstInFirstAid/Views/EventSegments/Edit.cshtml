@model FirstInFirstAid.Models.EventSegment

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts {

    @Scripts.Render("~/Scripts/jquery-ui-timepicker-addon.min.js")

    <script type="text/javascript">
        $(document).ready(function () {

            //Generated the Client Contact list
            $('#ClientContact').click(function () {
                $.ajax({
                    type: "POST",
                    url: "/EventSegments/getClientContacts",
                    contentType: "application/json; charset=utf-8",
                    data: "{'clientId' : '" + @Model.Event.Id + "'}",
                    dataType: "json",
                    success: function (clientContactList) {
                        //add the client contacts to the  dropdown
                    },
                    error: function () {
                        alert("Failed to load Clients");
                    }
                })
            });

            //generates the venues list
            $('#Venue').click(function () {
                $.ajax({
                    type: "POST",
                    url: "/EventSegments/getVenues",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (venues) {
                        //add the venues to the drop down
                    },
                    error: function () {
                        alert("Failed to load Clients");
                    }
                })
            });

            //generates available trainer list


            $("#addAllocation").click(function () {
                $("#allocations")
                    .append('<div class="panel panel-default col-md-12">' +
                    '<p>' +
                    '<label class="control-label col-md-2">Name</label>' +
                    '<div class="col-md-10">' +
                    '<input id=\"Name\" type="\dropdown\" class=\"form-control\" onclick="getTrainers">' + //drop down here
                    '</div>' +
                    '</p>' +
                    '<p>' +
                    '<label class="control-label col-md-2">Duty Type</label>' +
                    '<div class="col-md-10">' +
                    '<input id=\"DutyType\" type="\text\" class=\"form-control\">' +
                    '</div>' +
                    '</p>' +
                    '<p>' +
                    '<label class="control-label col-md-2">Hours</label>' +
                    '<div class="col-md-10">' +
                    '<input id=\"Hours\" type="\text\" class=\"form-control\">' +
                    '</div>' +
                    '</p>' +
                    '<p>' +
                    '<label class="control-label col-md-2">Paid</label>' +
                    '<div class="col-md-10">' +
                    '<input id=\"Paid\" type="\text\" class=\"form-control\">' +
                    '</div>' +
                    '</p>' +
                    '<p>' +
                    '<label class="control-label col-md-2">PresenceConfirmation</label>' +
                    '<div class="col-md-10">' +
                    '<input id=\"Confirmation\" type="\text\" class=\"form-control\">' +
                    '</div>' +
                    '</p>' +
                    '<p>' +
                    '<label class="control-label col-md-2">PaymentNote</label>' +
                    '<div class="col-md-10">' +
                    '<input id=\"PaymentNote\" type="\text\" class=\"form-control\">' +
                    '</div>' +
                    '</p>' +
                    '<button type="button" value="Delete" class="btn btn-default" onclick="$(this).parent().remove();" />' +
                    '<button type="button" value="Send Email" class="btn btn-default" />' +
                    '</div>');
            });
        });

        function getTrainers() {
            $.ajax({
                type: 'POST',
                url: '/EventSegments/getAvailableTrainers',
                data: "{'segmentId' : '" + @Model.Id + "'}",
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (jsonData) {
                    console.log(jsonData);
                },
                error: function (msg) {
                    console.log(msg);
                }
            });
        };
    </script>
}
<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>EventSegment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Hours, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Hours, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequiredNumberOfStaff, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RequiredNumberOfStaff, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RequiredNumberOfStaff, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClientContact, htmlAttributes: new { @class = "control-label col-md-2" })
            <!-- create drop down skeleton with the Id #ClientContact-->
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Venue, htmlAttributes: new { @class = "control-label col-md-2" })
            <!-- create drop down skeleton with the Id #Venue-->
        </div>

         
        <div class="form-group">
            <label class="control-label col-md-2">Trainer Allocations</label>
            <div id="allocations" class="panel panel-default panel-body col-md-8">
                <button id="addAllocation" data-target="#modal" data-toggle="modal" type="button" class="btn btn-success .btn-sm"> Add </button>
                   @if (Model.TrainorAllocations != null)
                   {
                       foreach (var allocation in Model.TrainorAllocations)
                       {
                        <div class="panel panel-default panel-collapse">
                            <p>
                                <label class="control-label col-md-2">Name</label>
                                <div class="col-md-10">
                                             <!-- create drop down skeleton with the Id #Trainers fire the function getTrainers-->
                                </div>
                            </p>
                            <p>
                                <label class="control-label col-md-2">Duty Type</label>
                                <div class="col-md-10">
                                    @Html.Editor(allocation.DutyType.ToString(), new { htmlAttributes = new { @id = "DutyType", @class = "form-control" } })
                                </div>
                            </p>
                            <p>
                                <label class="control-label col-md-2">Hours</label>
                                <div class="col-md-10">
                                    @Html.Editor(allocation.Hours.ToString(), new { htmlAttributes = new { @id = "Hours", @class = "form-control" } })
                                </div>
                            </p>
                            <p>
                                <label class="control-label col-md-2">Paid</label>
                                <div class="col-md-10">
                                    @Html.Editor(allocation.Paid.ToString(), new { htmlAttributes = new { @id = "StartTime", @class = "form-control" } })
                                </div>
                            </p>
                            <p>
                                <label class="control-label col-md-2">PresenceConfirmation</label>
                                <div class="col-md-10">
                                    @Html.Editor(allocation.PresenceConfirmation.ToString(), new { htmlAttributes = new { @id = "StartTime", @class = "form-control" } })
                                </div>
                            </p>
                            <p>
                                <label class="control-label col-md-2">PresenceConfirmation</label>
                                <div class="col-md-10">
                                    @Html.TextBox(allocation.PaymentNote, new { htmlAttributes = new { @id = "StartTime", @class = "form-control" } })
                                </div>
                            </p>

                            <button type="button" value="Delete" class="btn btn-default" onclick="$(this).parent().remove();" />
                            <button type="button" value="Send Email" class="btn btn-default" />
                        </div>
                       }
                   }                        
            </div>            
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Back to List", "Index")
</div>
