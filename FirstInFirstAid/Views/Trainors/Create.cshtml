@model FirstInFirstAid.Models.Trainor

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Scripts {

    @Scripts.Render("~/Scripts/jquery-ui-timepicker-addon.min.js")


    <script type="text/javascript">
        $(document).ready(function () {
            $("#mydob").datepicker({
                dateFormat: "dd-M-yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-100:+0",
                controlType: "select",
                maxDate: "0"
            });


            $("#dateAttained").datepicker({
                dateFormat: "dd.M.yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-50:+50",
                controlType: "select",
                onSelect: function (selected) {
                    $("#expiry").datepicker("option", "minDate", selected)
                }
            });          

            $("#expiry").datepicker({
                dateFormat: "dd.M.yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-100:+0",
                controlType: "select",
                onSelect: function (selected) {
                    $("#dateAttained").datepicker("option", "maxDate", selected)
                }

            });


            jQuery.validator.methods.date = function (value, element) {
                var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
                if (isChrome) {
                    var d = new Date();
                    return this.optional(element) || !/Invalid|NaN/.test(new Date(d.toLocaleDateString(value)));
                } else {
                    return this.optional(element) || !/Invalid|NaN/.test(new Date(value));
                }
            };


            var i = 0;
            var valid = false;
            $("#addQualification").click(function () {
                var qname = $("#name").val();
                var dateattained = $("#dateAttained").val();
                var expirydate = $("#expiry").val();
              

                if (qname == '') {
                    valid = false;
                    $("#qempty").show();
                } else {
                    $("#qempty").hide();
                }

                if (dateattained == '') {
                    valid = false;
                    $("#daempty").show();
                } else {
                    $("#daempty").hide();
                }

                if (expirydate == '') {
                    valid = false;
                    $("#exdempty").show();
                } else {
                    $("#exdempty").hide();
                }

               if (qname != '' & dateattained != '' & expirydate != '') {
                  valid = true;
              }

             if (valid == true) {
                    $('#qualifications> tbody:last-child').append(
                        "<tr id=" + i + ">" +
                        "<td> " + $("#name").val() + "</td>" +
                        "<td>" + $("#dateAttained").val() + "</td>" +
                        "<td>" + $("#expiry").val() + "</td>" +
                        "<td><input type='button' class='btn btn-danger' value='Delete' onclick='deleteQualification(" + i + ")'/></td>" +
                        "</tr >");
                    i++;
                    $('#modal').modal('hide');
                } else {
                    $('#modal').modal('show');
                }               
            });

            $("#modal").on('hidden.bs.modal', function () {
                $(".modal-body input p").val('');
            });
        });

        function deleteQualification(id) {
            $("#" + id).remove();
        };

        function addAllQualificationsToForm() {
            var count = 0;

            $('#qualifications > tbody > tr:not(:first)').each(function () {
                var columns = $(this).find('td');

                $("#form").append("<input type='hidden' name='Qualifications[" + count + "].QualificationName'" + " value='" + $(columns[0]).html().trim() + "'/>");
                $("#form").append("<input type='hidden' name='Qualifications[" + count + "].DateAttained'" + " value='" + $(columns[1]).html().trim() + "'/>");
                $("#form").append("<input type='hidden' name='Qualifications[" + count + "].ExpiryDate'" + " value='" + $(columns[2]).html().trim() + "'/>");
                count++;
            });
        }
    </script>
}

<h3 class="page-header">Add New Trainer</h3>
<div class="container-fluid">
    <div class="row">
@using (Html.BeginForm())
{
@Html.AntiForgeryToken()

<div class="form-horizontal" id="form">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <label class="control-label col-md-2">First Name:</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "First Name" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Last Name:</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last Name" } })
            @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Phone Number:</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone Number" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Email:</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">DOB:</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", @id="mydob", @placeholder = "DOB", @type = "datetime", onkeydown = "return false", onpaste = "return false" } })
            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Tax File Number:</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.TaxFileNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Tax File Number" } })
            @Html.ValidationMessageFor(model => model.TaxFileNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Address:</label>
        <div class="col-md-10">
            <div class="form-group">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address.StreetNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Street Number" } })
                    @Html.ValidationMessageFor(model => model.Address.StreetNumber, "", new { @class = "text-danger" })
                </div>

            </div>
            <div class="form-group ">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address.StreetName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Street Name" } })
                    @Html.ValidationMessageFor(model => model.Address.StreetName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group ">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address.Suburb, new { htmlAttributes = new { @class = "form-control", @placeholder = "Suburb" } })
                    @Html.ValidationMessageFor(model => model.Address.Suburb, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Address.State, "- Please Select State -", new { @id = "Address.State", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Address.State, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address.Postcode, new { htmlAttributes = new { @class = "form-control", @placeholder = "Postcode" } })
                    @Html.ValidationMessageFor(model => model.Address.Postcode, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Add Trainer Qualification:</label>
        <div class="col-md-10">
            <button data-target="#modal" data-toggle="modal" type="button" class="btn btn-success .btn-sm"> Add </button>
        </div>
    </div>

    <h4 class="page-header"> Trainer Qualifications</h4>
    <div class="table-responsive">
        <table id="qualifications" class="table" style="width:100%; padding-top:40px;">
            <tbody>
                <tr>
                    <th>Qualification Name</th>
                    <th>Date Attained</th>
                    <th>Expiry Date</th>
                    <th>Actions</th>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="form-group">
        <div class="col-md-2">
            <input onclick="addAllQualificationsToForm();" type="submit" value="Add Trainer" class="btn-lg btn-success" /> 
        </div>
        <!--<div class="col-md-3">
            @Html.ActionLink("Discard", "Index", new { }, new { @class="btn btn-default"})
        </div>-->
    </div>
</div>
}
</div>
</div>
<div id="modal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add Qualification</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">

                    <div class="form-group">
                        <label for="name" class="control-label col-md-3">Qualification Name:</label>
                        <input type="text" class="form-control col-md-9" id="name" placeholder="Qualification Name">
                        <p id="qempty" class="c-val" hidden> Qualification name is missing</p>
                   </div>

                    <div class="form-group">
                        <label for="dateAttained" class="control-label col-md-3">Date Attained:</label>
                        <input type="text" onkeydown = "return false"  onpaste = "return false" class="form-control col-md-9" id="dateAttained" placeholder="Date attained">
                        <p id="daempty" class="c-val" hidden>Date attained is missing</p>
                      
                     </div>

                    <div class="form-group">
                        <label for="expiry" class="control-label col-md-3">Expiry Date:</label>
                        <input type="text" onkeydown="return false" onpaste="return false" class="form-control col-md-9" id="expiry" placeholder="Expiry Date">
                        <p id="exdempty" class="c-val" hidden>Expiry date is missing</p>
                        

                    </div>
                    <input type="hidden" id="qlfctnId">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="addQualification">
                    <span class="ui-button-text">Add</span>
                </button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<!--<div>
    @Html.ActionLink("Back to List", "Index")
</div>-->

