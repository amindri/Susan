@model FirstInFirstAid.Models.Trainor

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Scripts {
    @Scripts.Render("~/Scripts/jquery-ui-timepicker-addon.min.js")

    <script type="text/javascript">
        $(document).ready(function () {
           
            $("#mydob").datepicker({
                dateFormat: "dd.M.yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-100:+0",
                controlType: "select",
                maxDate: "0"
            });


             $("#dateAttained").datepicker({
                 dateFormat: "dd.M.yy",
                 changeMonth: true,
                 changeYear: true,
                 yearRange: "-50:+50",
                 controlType: "select",
                 onSelect: function (selected) {
                     $("#expiry").datepicker("option", "minDate", selected)
                 }
             });

             $("#expiry").datepicker({
                 dateFormat: "dd.M.yy",
                 changeMonth: true,
                 changeYear: true,
                 yearRange: "-100:+0",
                 controlType: "select",
                 onSelect: function (selected) {
                     $("#dateAttained").datepicker("option", "maxDate", selected)
                 }

             });

             var i = $("#qualifications td").closest("tr").length;
             var valid = false;
             $("#addQualification").click(function () {
                 var qname = $("#name").val();
                 var dateattained = $("#dateAttained").val();
                 var expirydate = $("#expiry").val();

                 if (qname == '') {
                     valid = false;
                     $("#qempty").show();
                 }

                 if (dateattained == '') {
                     valid = false;
                     $("#daempty").show();
                 }

                 if (expirydate == '') {
                     valid = false;
                     $("#exdempty").show();
                 }

              
                 if (qname != '' & dateattained != '' & expirydate != '' ) {
                     valid = true;
                 }

                 if (valid == true) {
                     if ($(this).attr('data-action') == "add") {
                         $('#qualifications> tbody:last-child').append(
                             "<tr id=" + i + ">" +
                             "<td> " + $("#name").val() + "</td>" +
                             "<td>" + $("#dateAttained").val() + "</td>" +
                             "<td>" + $("#expiry").val() + "</td>" +
                             "<td>" +
                             "<button type='button' class='btn btn-primary' data-toggle='modal' data-target='#modal' data-id=" + i + " data-action='Change'>" +
                             "Edit" +
                             "</button>" + "&nbsp&nbsp&nbsp;" +
                             "<button type= 'button' class='btn btn-danger' value= 'Delete' onclick= 'deleteQualification(" + i + ")'>" +
                             "Delete" +
                             "</button>" +
                             "</td>" +
                             "</tr >");
                         i++;
                     } else {
                         var qlfctnId = $("#qlfctnId").val();
                         $("#" + qlfctnId + " td:nth-child(1)").html($("#name").val());
                         $("#" + qlfctnId + " td:nth-child(2)").html($("#dateAttained").val());
                         $("#" + qlfctnId + " td:nth-child(3)").html($("#expiry").val());
                     }
                     $('#modal').modal('hide');

                 } else {
                     $('#modal').modal('show');
                 }

                
             });

             $("#modal").on('hidden.bs.modal', function () {
                 $(".modal-body input p").val("");
             });


             $('#modal').on('show.bs.modal', function (event) {
                 var button = $(event.relatedTarget) // Button that triggered the modal
                 var buttonName = button.data('action') // Extract info from data-* attributes
                 // Update the modal's content.
                 var modal = $(this);
                 if (buttonName == "Change") {
                     var rowId = button.data('id');
                     modal.find('.modal-footer button span').text(buttonName);
                     modal.find('.modal-footer button').attr("data-action", "change");
                     modal.find('.modal-body input#name').val($("tr#" + rowId + " td:nth-child(1)").html());
                     modal.find('.modal-body input#dateAttained').val($("tr#" + rowId + " td:nth-child(2)").html());
                     modal.find('.modal-body input#expiry').val($("tr#" + rowId + " td:nth-child(3)").html());
                     modal.find('.modal-body input#qlfctnId').val(button.data('id'));
                 } else {
                     modal.find('.modal-footer button span').text("Add");
                     modal.find('.modal-footer button').attr("data-action", "add");
                 }
             });

         });

         function deleteQualification(id) {
             $("#" + id).remove();
         };

         function addAllCQualificationsToForm() {
             var count = 0;

             $('#qualifications > tbody > tr:not(:first)').each(function () {
                 var columns = $(this).find('td');

                 $("#form").append("<input type='hidden' name='Qualifications[" + count + "].QualificationName'" + " value='" + $(columns[0]).html().trim() + "'/>");
                 $("#form").append("<input type='hidden' name='Qualifications[" + count + "].DateAttained'" + " value='" + $(columns[1]).html().trim() + "'/>");
                 $("#form").append("<input type='hidden' name='Qualifications[" + count + "].ExpiryDate'" + " value='" + $(columns[2]).html().trim() + "'/>");
                 $("#form").append("<input type='hidden' name='Qualifications[" + count + "].Id'" + " value='" + $(this).attr("data-dbId").trim() + "'/>");
                 count++;
             });
         };
    </script>
}

<h3 class="page-header">Edit Trainer</h3>
<div class="container-fluid">
    <div class="row">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal" id="form">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    <label class="control-label col-md-2">First Name:</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Last Name:</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Phone Number:</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Email:</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">DOB:</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control", @id = "mydob", @type = "datetime", onkeydown = "return false", onpaste = "return false" } })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Tax File Number:</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TaxFileNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TaxFileNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Address</label>
                    <div class="col-md-10">
                        @Html.HiddenFor(model => model.Address.Id)
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Address.StreetNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address.StreetNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Address.StreetName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address.StreetName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Address.Suburb, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address.Suburb, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EnumDropDownListFor(model => model.Address.State, new { @id = "Address.State", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Address.State, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Address.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address.Postcode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Add Trainer Qualification:</label>
                    <div class="col-md-10">
                        <button data-target="#modal" data-toggle="modal" type="button" class="btn btn-success .btn-sm"> Add </button>
                    </div>
                </div>


                <h4 class="page-header"> Trainer Qualifications</h4>
                <div class="table-responsive">
                    <table id="qualifications" class="table" style="width:100%; padding-top:40px;">
                        <tbody>
                            <tr>
                                <th>Qualification Name</th>
                                <th>Date Attained</th>
                                <th>Expiry Date</th>
                                <th>Actions</th>

                            </tr>
                            @if (Model.Qualifications != null)
                            {
                                var count = 0;
                                foreach (var qualification in Model.Qualifications)
                                {
                                    <tr id=@count data-dbId=@qualification.Id>
                                        <td>@qualification.QualificationName</td>
                                        <td>@qualification.DateAttained</td>
                                        <td>@qualification.ExpiryDate</td>
                                        <td>
                                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#modal" data-id="@count" data-action="Change">
                                                Edit
                                            </button> &nbsp;
                                            <button type="button" class="btn btn-danger" value="Delete" onclick="deleteQualification(@count)">
                                                Delete
                                            </button>

                                        </td>
                                    </tr>
                                    count++;
                                }
                            }
                        </tbody>
                    </table>
                </div>

                <div class="form-group">
                    <div class=" col-md-2">
                        <input onclick="addAllCQualificationsToForm();" type="submit" value="Save Trainer" class="btn-lg btn-success" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div id="modal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add Qualification</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">

                    <div class="form-group">
                        <label for="name" class="control-label col-md-3">Qualification Name:</label>
                        <input class="form-control col-md-9" type="text" id="name" placeholder="Qualification name" />
                        <p id="qempty" class="c-val" hidden>Qualification name missing</p>
                        <!--<div class="col-md-10">
                            @Html.Editor("QualificationName", new { htmlAttributes = new { @class = "form-control", @type="text", @placeholder="Name", @id="name" } })
                        </div>-->

                    </div>

                    <div class="form-group">
                        <label for="dateAttained" class="control-label col-md-3">Date Attained</label>
                        <input type="text" onkeydown="return false" onpaste="return false" class="form-control col-md-9 mydatepick" id="dateAttained" placeholder="Date attained">
                        <p id="daempty" class="c-val" hidden>Date attained is missing</p>
                        <!-- <div class="col-md-10">
         @Html.Editor("DateAttained", new { htmlAttributes = new { @class = "form-control", @placeholder = "Date Attained", @type = "datetime", onkeydown = "return false", onpaste = "return false", @id = "dateAttained" } })


     </div>-->
                    </div>

                    <div class="form-group">
                        <label for="expiry" class="control-label col-md-3">Expiry Date</label>
                        <input type="text" onkeydown="return false" onpaste="return false" class="form-control col-md-9 mydatepick" id="expiry" placeholder="Expiry Date">
                        <p id="exdempty"  class="c-val" hidden>Expiry date is missing</p>
                        <p id="datebig"  class="c-val" hidden> Expiry date must be after qualification attained date</p>
                        <!--          <div class="col-md-10">
                  @Html.Editor("ExpiryDate", new { htmlAttributes = new { @class = "form-control", @placeholder = "Expiry Date", @type = "datetime", onkeydown = "return false", onpaste = "return false", @id = "expiry" } })
              </div> -->



                    </div>
                    <input type="hidden" id="qlfctnId">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" id="addQualification">
                    <span class="ui-button-text">Add</span>
                </button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
