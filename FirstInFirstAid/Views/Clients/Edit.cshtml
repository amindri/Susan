@model FirstInFirstAid.Models.Client

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Scripts {
    @Scripts.Render("~/Scripts/bootstrap.min.js")
    <script type="text/javascript">
        $(document).ready(function () {

            var i = $("#contacts td").closest("tr").length;
            var valid = true;
            $("#addContact").click(function () {
              
                var name = $('#name').val();
                if (name == '') {
                    valid = false;
                    $("#nempty").show();
                } else {
                    $("#nempty").hide();
                }

               /* var position = $('#position').val();
                if (position == '') {
                    valid = false;
                    $("#pempty").show();
                } else {
                    $("#pempty").hide();
                }*/

                var phone = $('#phone').val();
                var intRegex = /[0-9 -()+]+$/;
                if (phone == '') {
                    valid = false;
                    $("#phempty").show();
                    $("#phwrong").hide();
                } else if ((phone.length < 10) || (!intRegex.test(phone))) {
                    valid = false;
                    $("#phempty").hide();
                    $("#phwrong").show();
                } else {
                    $("#phempty").hide();
                    $("#phwrong").hide();
                }

               /* var email = $('#email').val();
                var emailReg = /^([\w-\.]+@@([\w-]+\.)+[\w-]{2,4})?$/;
                if (email == '') {
                    valid = false;
                    $("#emempty").show();
                    $("#emwrong").hide();
                } else if ((!emailReg.test(email))) {
                    valid = false;
                    $("#emempty").hide();
                    $("#emwrong").show();
                } else {
                    $("#emempty").hide();
                    $("#emwrong").hide();
                }*/

                if ((name != '')  & (phone != '')  & (intRegex.test(phone)) & (phone.length == 10)) {
                    valid = true;
                }

                if (valid == true) {
                    if ($(this).attr('data-action') == "add") {
                    $('#contacts> tbody:last-child').append(
                        "<tr id=" + i + ">" +
                        "<td> " + $("#name").val() + "</td>" +
                        "<td>" + $("#position").val() + "</td>" +
                        "<td>" + $("#phone").val() + "</td>" +
                        "<td>" + $("#phoneoff").val() + "</td>" +
                        "<td>" + $("#email").val() + "</td>" +
                        "<td>" + "<button type='button' class='btn btn-primary' data-toggle='modal' data-target='#modal' data-id=" + i + " data-action='Change'>" +
                        "Edit" +
                        "</button>" + "&nbsp;&nbsp;&nbsp;" +
                        "<button type= 'button' class='btn btn-danger' value= 'Delete' onclick= 'deleteContact(" + i + ")'>" +
                        "Delete" +
                        "</button>" +
                        "</td>" +
                        "</tr >");
                    i++;
                } else {
                    var trId = $("#trId").val();
                    $("#" + trId + " td:nth-child(1)").html($("#name").val());
                    $("#" + trId + " td:nth-child(2)").html($("#position").val());
                    $("#" + trId + " td:nth-child(3)").html($("#phone").val());
                    $("#" + trId + " td:nth-child(4)").html($("#phoneoff").val());
                    $("#" + trId + " td:nth-child(5)").html($("#email").val());
                }
                $('#modal').modal('hide');
            }
                else {
                    $('#modal').modal('show');
                }
            });

            $("#modal").on('hidden.bs.modal', function () {
                $(".modal-body input").val("");
            });


            $('#modal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget) // Button that triggered the modal
                var buttonName = button.data('action') // Extract info from data-* attributes
                // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
                // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
                var modal = $(this);
                if (buttonName == "Change") {
                    var rowId = button.data('id');
                    modal.find('.modal-footer button span').text(buttonName);
                    modal.find('.modal-footer button').attr("data-action", "change");
                    modal.find('.modal-body input#name').val($("#" + rowId + " td:nth-child(1)").html());
                    modal.find('.modal-body input#phone').val($("#" + rowId + " td:nth-child(3)").html());
                    modal.find('.modal-body input#phoneoff').val($("#" + rowId + " td:nth-child(4)").html());
                    modal.find('.modal-body input#position').val($("#" + rowId + " td:nth-child(2)").html());
                    modal.find('.modal-body input#email').val($("#" + rowId + " td:nth-child(5)").html());
                    modal.find('.modal-body input#trId').val(button.data('id'));
                } else {
                    modal.find('.modal-footer button span').text("Add");
                    modal.find('.modal-footer button').attr("data-action", "add");
                }
            });

        });

        function deleteContact(id) {
            $("#" + id).remove();
        };

        function addAllContactsToForm() {
            var count = 0;

            $('#contacts > tbody > tr:not(:first)').each(function () {
                var columns = $(this).find('td');

                $("#form").append("<input type='hidden' name='ClientContacts[" + count + "].ContactName'" + " value='" + $(columns[0]).html().trim() + "'/>");
                $("#form").append("<input type='hidden' name='ClientContacts[" + count + "].ContactPosition'" + " value='" + $(columns[1]).html().trim() + "'/>");
                $("#form").append("<input type='hidden' name='ClientContacts[" + count + "].ContactPhone'" + " value='" + $(columns[2]).html().trim() + "'/>");
                $("#form").append("<input type='hidden' name='ClientContacts[" + count + "].ContactPhoneOff'" + " value='" + $(columns[3]).html().trim() + "'/>");
                $("#form").append("<input type='hidden' name='ClientContacts[" + count + "].ContactEmail'" + " value='" + $(columns[4]).html().trim() + "'/>");
                $("#form").append("<input type='hidden' name='ClientContacts[" + count + "].Id'" + " value='" + $(this).attr("data-dbId").trim() + "'/>");                
                count++;
            });
        };


    </script>
}
<h3 class="page-header">Edit Client</h3>
<div class="container-fluid">
    <div class="row">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal" id="form">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    <label class="control-label col-md-2">Name:</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="EventName">Address:</label>
            <div class="col-md-10">
                @if (Model.Address != null) {
                    @Html.HiddenFor(model => model.Address.Id)
                }
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address.StreetNumber, new { htmlAttributes = new { @id = "Address.StreetNumber", @class = "form-control", @placeholder = "Street Number" } })
                        @Html.ValidationMessageFor(model => model.Address.StreetNumber, "", new { @class = "text-danger" })
                    </div>

                        </div>
                        <div class="form-group ">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Address.StreetName, new { htmlAttributes = new { @id = "Address.StreetName", @class = "form-control", @placeholder = "Street Name" } })
                                @Html.ValidationMessageFor(model => model.Address.StreetName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group ">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Address.Suburb, new { htmlAttributes = new { @id = "Address.Suburb", @class = "form-control", @placeholder = "Suburb" } })
                                @Html.ValidationMessageFor(model => model.Address.Suburb, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EnumDropDownListFor(model => model.Address.State, "- Please Select State -", new { @id = "Address.State", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Address.State, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Address.Postcode, new { htmlAttributes = new { @id = "Address.Postcode", @class = "form-control", @placeholder = "Postcode" } })
                                @Html.ValidationMessageFor(model => model.Address.Postcode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Add Client Contacts:</label>
                    <div class="col-md-10">
                        <button data-target="#modal" data-toggle="modal" type="button" class="btn btn-success .btn-sm"> Add  </button>
                    </div>
                </div>

                <h4 class="page-header"> Client Contacts</h4>
                <div class="table-responsive">
                    <table id="contacts" style="width:100%; margin-bottom:60px;">
                        <tbody>
                            <tr>
                                <th>Name</th>
                                <th>Position</th>
                                <th>Mobile</th>
                                <th>Phone</th>
                                <th>Email</th>
                                <th>Actions</th>
                            </tr>
                            @if (Model.ClientContacts != null)
                            {
                                var count = 0;
                                foreach (var contact in Model.ClientContacts)
                                {
                                    <tr id=@count data-dbId=@contact.Id>
                                        <td>@contact.ContactName</td>
                                        <td>@contact.ContactPosition</td>
                                        <td>@contact.ContactPhone</td>
                                        <td>@contact.ContactPhoneOff</td>
                                        <td>@contact.ContactEmail</td>
                                        <td>

                                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#modal" data-id="@count" data-action="Change">
                                                Edit
                                            </button> &nbsp;
                                            <button type="button" class="btn btn-danger"  value="Delete" onclick="deleteContact(@count)">
                                                Delete
                                            </button>
                                        </td>
                                    </tr>
                                    count++;
                                }
                            }
                        </tbody>
                    </table>
                </div>

                <div class="form-group">
                    <div class="col-md-2">
                        <input onclick="addAllContactsToForm();" type="submit" value="Save Client" class="btn-lg btn-success" />
                    </div>
                </div>
            </div>
        }
        </div>
    </div>
        <div id="modal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Add Client Contact</h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-horizontal">

                            <div class="form-group">
                                <label for="name" class="control-label col-md-2">Name:</label>
                                <input type="text" class="form-control" id="name" placeholder="Name">
                                <p id="nempty" class="c-val" hidden> Name is missing</p>
                            </div>

                            <div class="form-group">
                                <label for="position" class="control-label col-md-2">Position:</label>
                                <input type="text" class="form-control" id="position" placeholder="Position">

                            </div>

                            <div class="form-group">
                                <label for="phone" class="control-label col-md-2">Mobile:</label>
                                <input type="tel" class="form-control" id="phone" placeholder="Mobile">
                                <p id="phempty" class="c-val" hidden> Phone number is missing</p>
                                <p id="phwrong" class="c-val" hidden> Please enter a valid phone number</p>
                            </div>
                            <!--New field to add office phone-->
                            <div class="form-group">
                                <label for="phone" class="control-label col-md-2">Phone:</label>
                                <input type="tel" class="form-control" id="phoneoff" placeholder="Phone">
                            </div>

                            <div class="form-group">
                                <label for="email" class="control-label col-md-2">Email:</label>
                                <input type="email" class="form-control" id="email" placeholder="Email">
                              
                            </div>
                            <input type="hidden" id="trId">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" id="addContact">
                            <span class="ui-button-text">Add</span>
                        </button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
